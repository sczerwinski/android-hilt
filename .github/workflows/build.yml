# Regular build for all pushes and pull requests

name: Build

on:
  push:
    branches: [ main ]
  pull_request:

jobs:

  gradleValidation:
    name: Validate Gradle Wrapper
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1.1.0

  properties:
    name: Export Properties
    if: github.event_name != 'pull_request'
    needs: gradleValidation
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.properties.outputs.version }}
      changelog: ${{ steps.properties.outputs.changelog }}
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v3.13.0
        with:
          distribution: zulu
          java-version: 17
      - name: Export Properties
        id: properties
        shell: bash
        run: |
          PROPERTIES="$(./gradlew properties --console=plain -q)"
          VERSION="$(echo "$PROPERTIES" | grep "^version:" | cut -f2- -d ' ')"
          CHANGELOG="$(./gradlew getChangelog --unreleased --no-header --console=plain -q)"
          CHANGELOG="${CHANGELOG//'%'/'%25'}"
          CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
          CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"
          echo "::set-output name=version::$VERSION"
          echo "::set-output name=changelog::$CHANGELOG"

  checks:
    name: Run Checks
    needs: gradleValidation
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v3.13.0
        with:
          distribution: zulu
          java-version: 17
      - name: Run Unit Tests
        run: ./gradlew test --stacktrace
      - name: Publish Test Report
        if: ${{ always() }}
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          check_name: "Unit Test Results"
          files: '**/build/test-results/**/*.xml'
      - name: Run Detekt
        if: ${{ always() }}
        run: ./gradlew detekt --stacktrace
      - name: Generate Detekt Annotations
        if: ${{ always() }}
        uses: jwgmeligmeyling/checkstyle-github-action@master
        with:
          path: '**/detekt.xml'
      - name: Run Lint
        if: ${{ always() }}
        run: ./gradlew lint --stacktrace
      - name: Generate Lint Annotations
        if: ${{ always() }}
        uses: yutailang0119/action-android-lint@v3
        with:
          report-path: '**/build/reports/lint-results-*.xml'

  connectedChecks:
    name: Run Connected Checks
    needs: gradleValidation
    runs-on: macos-latest
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v3.13.0
        with:
          distribution: zulu
          java-version: 17
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Assemble Connected Tests
        run: ./gradlew assembleAndroidTest --stacktrace
      - name: Run Connected Checks On Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 31
          target: default
          arch: x86_64
          profile: Nexus 6
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew connectedCheck --no-parallel --stacktrace
      - name: Publish Android Test Report
        if: ${{ always() }}
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        with:
          check_name: "Connected Test Results"
          files: '**/build/outputs/androidTest-results/**/*.xml'

  dokka:
    name: Generate Dokka Documentation
    needs: gradleValidation
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v3.13.0
        with:
          distribution: zulu
          java-version: 17
      - name: Generate Documentation
        run: ./gradlew dokkaJavadoc dokkaJekyll --stacktrace

  assembleRelease:
    name: Assemble Release AAR
    needs: gradleValidation
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v3.13.0
        with:
          distribution: zulu
          java-version: 17
      - name: Assemble Release AAR
        run: ./gradlew assembleRelease --stacktrace

  releaseDraft:
    name: Draft New Release
    if: (github.event_name != 'pull_request') && (github.ref == 'refs/heads/main')
    needs: properties
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4
      - name: Remove Old Release Drafts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -H "Authorization: Bearer $GITHUB_TOKEN" https://api.github.com/repos/$GITHUB_REPOSITORY/releases \
            | tr '\r\n' ' ' \
            | jq '.[] | select(.draft == true) | .id' \
            | xargs -I '{}' \
          curl -X DELETE -H "Authorization: Bearer $GITHUB_TOKEN" https://api.github.com/repos/$GITHUB_REPOSITORY/releases/{}
      - name: Create Release Draft
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.properties.outputs.version }}
          release_name: v${{ needs.properties.outputs.version }}
          body: ${{ needs.properties.outputs.changelog }}
          draft: true

  snapshot:
    name: Publish To OSSRH Snapshot Repository
    if: (github.event_name != 'pull_request') && (github.ref == 'refs/heads/main')
    needs: gradleValidation
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v3.13.0
        with:
          distribution: zulu
          java-version: 17
      - name: Decrypt Key Ring File
        env:
          FILE_PASSPHRASE: ${{ secrets.FILE_PASSPHRASE }}
        run: gpg --quiet --batch --yes --decrypt --passphrase="${FILE_PASSPHRASE}" --output secring.gpg secring.gpg.gpg
      - name: Publish To OSSRH Snapshot Repository
        env:
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASS: ${{ secrets.SIGNING_PASS }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        run: ./gradlew publish -PlibVersionSuffix="SNAPSHOT" -Psigning.secretKeyRingFile=../../secring.gpg -Psigning.password="${SIGNING_PASS}" -Psigning.keyId="${SIGNING_KEY_ID}" --stacktrace
